<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - OrigensCO</title>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<body style="background-image: url('/images/wallpaperflare.com_wallpaper.jpg'); background-size: cover; background-position: center; background-repeat: no-repeat;">
    <header class="header">
        <div class="header-container">
            <a class="logo" asp-area="" asp-controller="Home" asp-action="Index">
                <img src="/images/origenscovertical.png" alt="OrigensCO Logo" class="logo-image">
            </a>

            <button class="navbar-toggler" type="button" onclick="toggleMenu()">
                <span class="navbar-toggler-icon"></span>
            </button>
            <nav>
                <ul class="nav-links" id="navLinks">
                    <li><a class="nav-link" asp-controller="Home" asp-action="Index">Home</a></li>
                    <li><a class="nav-link" asp-controller="Registro" asp-action="Register">Register</a></li>
                    @{
                        var user = Context.Session.GetString("User");
                    }
                    <li>
                        @if (string.IsNullOrEmpty(user))
                        {
                            <a class="nav-link" asp-controller="Login" asp-action="Login">Store</a>
                        }
                        else
                        {
                            <a class="nav-link" asp-controller="Pagamento" asp-action="Index">Store</a>
                        }
                    </li>
                    <li><a class="nav-link" asp-controller="Market" asp-action="Index">Market Live</a></li>
                    <li><a class="nav-link" asp-controller="Mining" asp-action="Index">Mining Live</a></li>
                    <li><a class="nav-link" asp-controller="Download" asp-action="Index">Download</a></li>
                    <li><a class="nav-link" asp-controller="Wiki" asp-action="Index">Wiki</a></li>
                </ul>
            </nav>
            <div class="auth-buttons">
                @if (!string.IsNullOrEmpty(user))
                {
                    <a class="login-button logged-in" asp-controller="Login" asp-action="Logout">
                        <i class="fas fa-sign-out-alt"></i> Logout
                    </a>
                }
                else
                {
                    <a class="login-button" asp-controller="Login" asp-action="Login">Login</a>
                }
            </div>
            @await Component.InvokeAsync("OnlinePlayers")
        </div>
    </header>

    <!-- Barra lateral flutuante para redes sociais -->
    <div class="social-sidebar">
        <a href="https://discord.gg/dbj3eGKHHH" target="_blank" class="social-link discord" title="Discord">
            <i class="fab fa-discord"></i>
        </a>
        <a href="https://www.facebook.com/OrigensConquer" target="_blank" class="social-link facebook" title="Facebook">
            <i class="fab fa-facebook-f"></i>
        </a>
        <a href="https://chat.whatsapp.com/GJPB1Kvspkd3YpKxfQoujR" target="_blank" class="social-link whatsapp" title="WhatsApp">
            <i class="fab fa-whatsapp"></i>
        </a>
    </div>

    <main role="main">
        @RenderBody()
    </main>



    @await RenderSectionAsync("Scripts", required: false)

    <script>
        // Função para atualizar o contador de jogadores online
        function updateOnlinePlayers() {
            fetch('/api/onlineplayers')
                .then(response => response.json())
                .then(data => {
                    const countElement = document.querySelector('.online-players-count');
                    if (countElement) {
                        // Animação de contagem
                        const currentCount = parseInt(countElement.textContent);
                        const newCount = data.count;

                        if (currentCount !== newCount) {
                            countElement.classList.add('updating');
                            setTimeout(() => {
                                countElement.textContent = newCount;
                                countElement.classList.remove('updating');
                            }, 300);
                        }
                    }
                })
                .catch(error => console.error('Erro ao atualizar jogadores online:', error));
        }
            
        // Inicializar quando o documento estiver pronto
        document.addEventListener('DOMContentLoaded', function() {
            console.log("DOM carregado. Iniciando funções...");

            // Inicializar contador de jogadores
            updateOnlinePlayers();

            // Verificar status do anúncio após um pequeno delay
            setTimeout(checkAnnouncementStatus, 1000);

            // Atualizar jogadores online a cada 60 segundos
            setInterval(updateOnlinePlayers, 60000);
        });

        // Expor as funções para o escopo global
        window.closeAnnouncement = closeAnnouncement;
        window.forceShowAnnouncement = forceShowAnnouncement;
    </script>
    <div class="video-container">
        <iframe width="300" height="170" src="https://www.youtube.com/embed/curyR7o2X4I?autoplay=1&mute=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>
        </iframe>
    </div>
</body> 

</html>